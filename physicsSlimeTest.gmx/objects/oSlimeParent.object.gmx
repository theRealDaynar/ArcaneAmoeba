<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//(instance_create(x-10,y,oHeart)).image_blend = make_color_rgb(34,177,76)
heart = instance_create(x,y,oHeart)
//.image_blend = make_color_rgb(34,177,76)

physics_particle_set_radius(3)
physics_particle_set_max_count(4000)
flags = phy_particle_flag_spring|phy_particle_flag_viscous
randomize()
physics_particle_group_begin(flags,id,x,y,0,0,0,0, make_color_rgb(irandom(255),irandom(255),irandom(255)), 1, 1, 1)
physics_particle_group_circle(50)
physics_particle_group_end()
//repeat(500)
//physics_particle_create(flags,x,y,5-random(10),5-random(10),c_blue,1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw_self()
/*
var count = physics_particle_count()
var dataFlags = phy_particle_data_flag_position | phy_particle_data_flag_velocity
var heat = 50
draw_set_blend_mode(bm_normal)

if count &gt; 0
{
    var buffer = buffer_create( count * 4, buffer_grow,4)
    physics_particle_get_data(buffer, dataFlags)
    for( var n = 0; n &lt; count; n++)
    {
        var xx = buffer_read(buffer, buffer_f32)
        var yy = buffer_read(buffer, buffer_f32)
        var xvel = buffer_read(buffer, buffer_f32)
        var yvel = buffer_read(buffer, buffer_f32)
        var vres = sqrt(abs((xvel^2)+(yvel^2)))
        var vcol = vres
        var dir = -1*radtodeg(arctan2(yvel,xvel)) + 90
        if (vres &gt; heat)
            vcol = heat
            //255, 128,0
            //34,177,76
        col = make_color_rgb(vcol/heat*14 + 20,vcol/heat*122 + 55,vcol/heat*50 + 26)//make_color_rgb(255,vcol/heat*240 + 10,0)//make_color_rgb(100*vcol/heat+155,-vcol/heat*37+155,155-155*vcol/heat)
        if vres &gt;= 8
            draw_sprite_ext(sDropBack,0,xx,yy,1/(vres/8),.75+.25/(vres/8),dir,col,1)
        else
            draw_sprite_ext(sDropBack,0,xx,yy,1,1,dir,col,1)
    }
    buffer_delete(buffer)
}

if count &gt; 0
{
    var buffer = buffer_create( count * 4, buffer_grow,4)
    physics_particle_get_data(buffer, dataFlags)
    
    for( var n = 0; n &lt; count; n++)
    {    
        draw_set_blend_mode(bm_add)
        var xx = buffer_read(buffer, buffer_f32)
        var yy = buffer_read(buffer, buffer_f32)
        var xvel = buffer_read(buffer, buffer_f32)
        var yvel = buffer_read(buffer, buffer_f32)
        var vres = sqrt(abs((xvel^2)+(yvel^2)))
        var vcol = vres
        var dir = -1*radtodeg(arctan2(yvel,xvel)) + 90
        if (vres &gt; heat)
            vcol = heat
            //27,137,60
            //34,177,76
        col = make_color_rgb(vcol/heat*14 + 20,vcol/heat*122 + 55,vcol/heat*50 + 26)//make_color_rgb(vcol/heat*27,vcol/heat*137 + 37,vcol/heat*60)//make_color_rgb(255,vcol/heat*240 + 10,0)//make_color_rgb(100*vcol/heat+155,-vcol/heat*37+155,155-155*vcol/heat)//make_color_rgb(100*vcol/heat+155,-vcol/heat*37+155,55-55*vcol/heat)
        if vres &gt;= 8
            draw_sprite_ext(sSlimeParticle,0,xx,yy,1/(vres/8),.75+.25/(vres/8),dir,col,1)
       else
           draw_sprite_ext(sSlimeParticle,0,xx,yy,1,1,dir,col,1)
    }
    buffer_delete(buffer)
}
draw_set_blend_mode(bm_normal)//*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>10</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
